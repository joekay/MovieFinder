{"ast":null,"code":"var _jsxFileName = \"/Users/joakimkonac/Documents/Skolprojekt/awebb/src/MovieItem.js\";\nimport React from 'react';\nimport Modal from 'react-modal';\nimport GetYoutubeId from './GetYoutubeId';\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '800px'\n  }\n}; // Not yet functional\n\n//var test = [];\nclass MovieItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false,\n      trailers: []\n    };\n\n    this.handleOpenModal = toggle => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n\n  componentDidMount() {\n    // We are getting trailer info from another API call but cannot extract Youtube ID\n    GetYoutubeId.getTrailers(this.props.keyy).then(result => {\n      this.setState(prevState => ({\n        trailers: result.results\n      }));\n    });\n  } // Toggle for Modal window\n\n\n  render() {\n    //test = this.state.trailers[0];\n    //console.log(test);\n    // Styling for the little star in the corner of each movie\n    var starStyle = [];\n\n    if (this.props.isFavorite) {\n      starStyle = {\n        backgroundImage: \"url(./starFilled.svg)\"\n      };\n    } else {\n      starStyle = {\n        backgroundImage: \"url(./star.svg)\"\n      };\n    }\n\n    return React.createElement(\"div\", {\n      className: \"movie-item\",\n      style: {\n        backgroundImage: \"url(\".concat(this.props.image, \")\")\n      },\n      onClick: e => {\n        if (e.target.className !== \"favBtn\") this.handleOpenModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.user ? React.createElement(\"div\", {\n      style: starStyle,\n      className: \"favBtn\",\n      onClick: e => {\n        this.props.addFavorite(this.props.item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default MovieItem;","map":{"version":3,"sources":["/Users/joakimkonac/Documents/Skolprojekt/awebb/src/MovieItem.js"],"names":["React","Modal","GetYoutubeId","customStyles","content","top","left","right","bottom","marginRight","transform","width","MovieItem","Component","state","isOpen","trailers","handleOpenModal","toggle","setState","componentDidMount","getTrailers","props","keyy","then","result","prevState","results","render","starStyle","isFavorite","backgroundImage","image","e","target","className","user","addFavorite","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAG;AACRC,IAAAA,GAAG,EAAqB,KADhB;AAERC,IAAAA,IAAI,EAAoB,KAFhB;AAGRC,IAAAA,KAAK,EAAmB,MAHhB;AAIRC,IAAAA,MAAM,EAAkB,MAJhB;AAKRC,IAAAA,WAAW,EAAa,MALhB;AAMRC,IAAAA,SAAS,EAAe,uBANhB;AAORC,IAAAA,KAAK,EAAmB;AAPhB;AADS,CAArB,C,CAYA;;AAKA;AAEA,MAAMC,SAAN,SAAwBZ,KAAK,CAACa,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACNC,MAAAA,MAAM,EAAE,KADF;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAF8B;;AAAA,SAmBtCC,eAnBsC,GAmBpBC,MAAM,IAAI;AAC1B,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAtB,OAAd;AACD,KArBqC;AAAA;;AAOtCK,EAAAA,iBAAiB,GAAG;AAElB;AACAlB,IAAAA,YAAY,CAACmB,WAAb,CAAyB,KAAKC,KAAL,CAAWC,IAApC,EAA0CC,IAA1C,CAAgDC,MAAD,IAAyB;AACtE,WAAKN,QAAL,CAAeO,SAAD,KAAuB;AACnCV,QAAAA,QAAQ,EAAES,MAAM,CAACE;AADkB,OAAvB,CAAd;AAGD,KAJD;AAMD,GAhBqC,CAkBtC;;;AAKAC,EAAAA,MAAM,GAAE;AAEN;AACA;AAEA;AACA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAG,KAAKP,KAAL,CAAWQ,UAAd,EAAyB;AACvBD,MAAAA,SAAS,GAAG;AAAEE,QAAAA,eAAe,EAAG;AAApB,OAAZ;AACD,KAFD,MAEO;AACLF,MAAAA,SAAS,GAAG;AAAEE,QAAAA,eAAe,EAAG;AAApB,OAAZ;AACD;;AAED,WAEE;AACA,MAAA,SAAS,EAAC,YADV;AAEA,MAAA,KAAK,EAAE;AAAEA,QAAAA,eAAe,gBAAS,KAAKT,KAAL,CAAWU,KAApB;AAAjB,OAFP;AAGA,MAAA,OAAO,EAAGC,CAAD,IAAK;AAAE,YAAGA,CAAC,CAACC,MAAF,CAASC,SAAT,KAAuB,QAA1B,EAAoC,KAAKlB,eAAL;AAAwB,OAH5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKC,KAAKK,KAAL,CAAWc,IAAX,GACC;AACE,MAAA,KAAK,EAAEP,SADT;AAEE,MAAA,SAAS,EAAC,QAFZ;AAGE,MAAA,OAAO,EAAGI,CAAD,IAAK;AAAC,aAAKX,KAAL,CAAWe,WAAX,CAAuB,KAAKf,KAAL,CAAWgB,IAAlC;AAAwC,OAHzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAIiE,IATlE,CAFF;AAgBD;;AApDqC;;AAuDxC,eAAe1B,SAAf","sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\n\nimport GetYoutubeId from './GetYoutubeId';\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)',\n    width                 : '800px'\n  }\n};\n\n// Not yet functional\ntype State = {\n  trailers: Array<Item>\n};\n\n//var test = [];\n\nclass MovieItem extends React.Component {\n\n  state = {\n    isOpen: false,\n    trailers: []\n  }\n\n  componentDidMount() {\n\n    // We are getting trailer info from another API call but cannot extract Youtube ID\n    GetYoutubeId.getTrailers(this.props.keyy).then((result: ApiResponse) => {\n      this.setState((prevState: State) => ({\n        trailers: result.results\n      }))\n    });\n    \n  }\n\n  // Toggle for Modal window\n  handleOpenModal = toggle => {\n    this.setState({ isOpen: !this.state.isOpen });\n  }\n\n  render(){\n\n    //test = this.state.trailers[0];\n    //console.log(test);\n\n    // Styling for the little star in the corner of each movie\n    var starStyle = [];\n    if(this.props.isFavorite){\n      starStyle = { backgroundImage : \"url(./starFilled.svg)\" }\n    } else {\n      starStyle = { backgroundImage : \"url(./star.svg)\" }\n    }\n    \n    return(\n\n      <div \n      className=\"movie-item\"\n      style={{ backgroundImage: `url(${this.props.image})`}}\n      onClick={(e)=>{ if(e.target.className !== \"favBtn\") this.handleOpenModal() }}\n      >\n      {this.props.user ? \n        <div \n          style={starStyle}         \n          className=\"favBtn\"\n          onClick={(e)=>{this.props.addFavorite(this.props.item)}} /> : null}\n\n\n      </div>\n      )\n  }\n}\n\nexport default MovieItem;\n"]},"metadata":{},"sourceType":"module"}