{"ast":null,"code":"var _jsxFileName = \"/Users/joakimkonac/Documents/Skolprojekt/awebb/src/Main.js\";\nimport React from 'react';\nimport Header from './Header';\nimport MovieList from './MovieList';\nimport Api from './Api';\nimport './css/App.css';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\nconst config = {\n  apiKey: \"AIzaSyA1d9vZltW10aoImVaEWBPV5H8pFho2wDg\",\n  authDomain: \"awebb-efe92.firebaseapp.com\",\n  databaseURL: \"https://awebb-efe92.firebaseio.com\",\n  projectId: \"awebb-efe92\",\n  storageBucket: \"awebb-efe92.appspot.com\",\n  messagingSenderId: \"878717963187\"\n};\nfirebase.initializeApp(config);\nconst auth = firebase.auth;\nconst provider = new firebase.auth.FacebookAuthProvider();\nvar counter = 0;\nvar favItems = [];\nvar synced = [];\nvar datalist = [];\nvar IDnr = 0;\nprovider.setCustomParameters({\n  'display': 'popup'\n});\n\nfunction mapStateToProps(state) {\n  return {\n    favo: state.favo,\n    initItems: state.initItems,\n    pressedId: state.pressedId\n  };\n}\n\n;\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = () => {\n      counter = 0;\n      IDnr = 0;\n      firebase.auth().signOut().then(() => {\n        this.setState({\n          user: null,\n          isLoggedin: false\n        });\n      });\n      setTimeout(() => {\n        this.props.dispatch({\n          type: \"LOGOUT\"\n        });\n      }, 1000);\n    };\n\n    this.onSearchbarChange = event => {\n      this.setState({\n        searchbarInput: event.target.value\n      });\n    };\n\n    this.addFavorite = movie => {\n      if (movie.isFavorite) {\n        this.removeFavorite(movie);\n        return;\n      }\n\n      var user = firebase.auth().currentUser;\n      var userData = this.state.user.uid;\n      var items = this.state.items.slice();\n      items[items.indexOf(movie)].isFavorite = true;\n      this.setState({\n        item: items\n      });\n      var selectedMovie = items[items.indexOf(movie)];\n      var selectedMovieId = selectedMovie.id;\n\n      if (counter != 0) {\n        var key = firebase.database().ref('users/' + user.uid).push().key;\n        firebase.database().ref('users/' + user.uid).update({\n          [selectedMovieId]: selectedMovie\n        });\n      }\n\n      this.props.dispatch({\n        type: \"ADDFAV\",\n        pressedMovie: movie\n      });\n    };\n\n    this.removeFavorite = movie => {\n      var items = this.state.items.slice();\n      var selected = null; //items[items.indexOf(movie)].isFavorite = false;\n\n      this.setState({\n        item: items\n      });\n      this.props.dispatch({\n        type: \"REMOVEFAV\",\n        pressedId: movie.id\n      });\n      var user = firebase.auth().currentUser;\n      var userData = this.state.user.uid;\n      firebase.database().ref('users/' + user.uid + '/' + movie.id).set(null);\n    };\n\n    this.state = {\n      items: [],\n      favoriteItems: [],\n      syncedItems: [],\n      searchbarInput: '',\n      favorites: [],\n      comment: 0,\n      user: null,\n      isLoggedin: false,\n      isSynced: false\n    };\n    this.renderChoices = this.renderChoices.bind(this);\n  }\n\n  async login() {\n    const test = await auth().signInWithPopup(provider).then(({\n      user\n    }) => {\n      this.setState(prevState => ({\n        user: user,\n        isLoggedin: true,\n        counter: 1,\n        favKey: 1\n      }), this.renderChoices);\n    });\n    counter++;\n  }\n\n  // Last step of initialization (Component lifecycle)\n  componentDidMount() {\n    Api.getList().then(result => {\n      this.setState(prevState => ({\n        items: result.results\n      }));\n\n      for (var i = 0; i < this.state.items.length; i++) {\n        this.state.items[i].isFavorite = false;\n      }\n\n      this.props.dispatch({\n        type: \"INIT\",\n        initItems: this.state.items\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.isLoggedin + \" \" + this.state.isSynced);\n\n    if (this.state.isLoggedin == true && this.state.isSynced == false) {\n      this.setState({\n        isSynced: true\n      });\n      this.state.isSynced = true;\n    }\n  } // Changes state depending on searchbar input\n\n\n  async renderChoices() {\n    var user = firebase.auth().currentUser.uid;\n    var childData2 = this.state.syncedItems.slice();\n    var query = firebase.database().ref(\"users/\" + user + \"/\").orderByKey();\n    query.once(\"value\").then(function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        // key will be \"ada\" the first time and \"alan\" the second time\n        var key = childSnapshot.key; // childData will be the actual contents of the child\n\n        var childData = childSnapshot.val(); // Add item to it\n\n        datalist.push(childData);\n      });\n    }.bind(this));\n    counter++;\n    IDnr = 2;\n    setTimeout(() => {\n      this.props.dispatch({\n        type: \"SYNC\",\n        favo: datalist\n      });\n    }, 1000);\n    IDnr = 2;\n    synced = this.props.favo;\n  } // Add favorites\n\n\n  render() {\n    // Filter items depending on searchbar input\n    const filteredItems = this.props.initItems.filter(item => {\n      return item.title.toLowerCase().indexOf(this.state.searchbarInput) >= 0;\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'baseline',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n        marginTop: '20px',\n        marginBottom: '20px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Header, {\n      onSearchbarChange: this.onSearchbarChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        color: 'white',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, this.state.user ? \"Signed in as \".concat(this.state.user.displayName, \"!\") : 'Please log in to add favorites.'), React.createElement(\"button\", {\n      style: {\n        width: '180px'\n      },\n      onClick: () => {\n        if (this.state.user == null) {\n          this.login();\n        } else {\n          this.logout();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.state.user == null ? \"Log In with Facebook\" : \"Log Out\"))), React.createElement(MovieList, {\n      items: filteredItems,\n      onStarClick: movie => this.addFavorite(movie),\n      user: this.state.user,\n      ID: IDnr,\n      favmovs: this.props.favo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps)(Main);","map":{"version":3,"sources":["/Users/joakimkonac/Documents/Skolprojekt/awebb/src/Main.js"],"names":["React","Header","MovieList","Api","firebase","connect","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","auth","provider","FacebookAuthProvider","counter","favItems","synced","datalist","IDnr","setCustomParameters","mapStateToProps","state","favo","initItems","pressedId","Main","Component","constructor","props","logout","signOut","then","setState","user","isLoggedin","setTimeout","dispatch","type","onSearchbarChange","event","searchbarInput","target","value","addFavorite","movie","isFavorite","removeFavorite","currentUser","userData","uid","items","slice","indexOf","item","selectedMovie","selectedMovieId","id","key","database","ref","push","update","pressedMovie","selected","set","favoriteItems","syncedItems","favorites","comment","isSynced","renderChoices","bind","login","test","signInWithPopup","prevState","favKey","componentDidMount","getList","result","results","i","length","componentDidUpdate","console","log","childData2","query","orderByKey","once","snapshot","forEach","childSnapshot","childData","val","render","filteredItems","filter","title","toLowerCase","display","alignItems","justifyContent","flexWrap","flexDirection","marginTop","marginBottom","color","marginRight","displayName","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,6BAFC;AAGbC,EAAAA,WAAW,EAAE,oCAHA;AAIbC,EAAAA,SAAS,EAAE,aAJE;AAKbC,EAAAA,aAAa,EAAE,yBALF;AAMbC,EAAAA,iBAAiB,EAAE;AANN,CAAf;AASAR,QAAQ,CAACS,aAAT,CAAuBP,MAAvB;AACA,MAAMQ,IAAI,GAAGV,QAAQ,CAACU,IAAtB;AAEA,MAAMC,QAAQ,GAAG,IAAIX,QAAQ,CAACU,IAAT,CAAcE,oBAAlB,EAAjB;AAEA,IAAIC,OAAO,GAAG,CAAd;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,IAAI,GAAG,CAAX;AAEAN,QAAQ,CAACO,mBAAT,CAA6B;AAC3B,aAAW;AADgB,CAA7B;;AASA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAE9B,SAAM;AACJC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADR;AAEJC,IAAAA,SAAS,EAAEF,KAAK,CAACE,SAFb;AAGJC,IAAAA,SAAS,EAAEH,KAAK,CAACG;AAHb,GAAN;AAKD;;AAAA;;AAED,MAAMC,IAAN,SAAmB5B,KAAK,CAAC6B,SAAzB,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6BnBC,MA7BmB,GA6BV,MAAM;AACbf,MAAAA,OAAO,GAAG,CAAV;AACAI,MAAAA,IAAI,GAAG,CAAP;AACAjB,MAAAA,QAAQ,CAACU,IAAT,GAAgBmB,OAAhB,GAA0BC,IAA1B,CAA+B,MAAM;AACnC,aAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,UAAU,EAAE;AAA1B,SAAd;AACD,OAFD;AAGAC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAApB;AAED,OAHS,EAGP,IAHO,CAAV;AAID,KAvCkB;;AAAA,SAqEnBC,iBArEmB,GAqEEC,KAAD,IAAmB;AACrC,WAAKP,QAAL,CAAc;AAAEQ,QAAAA,cAAc,EAAED,KAAK,CAACE,MAAN,CAAaC;AAA/B,OAAd;AACD,KAvEkB;;AAAA,SA2GnBC,WA3GmB,GA2GJC,KAAD,IAAW;AAEvB,UAAGA,KAAK,CAACC,UAAT,EAAoB;AAClB,aAAKC,cAAL,CAAoBF,KAApB;AACA;AACD;;AAED,UAAIX,IAAI,GAAGhC,QAAQ,CAACU,IAAT,GAAgBoC,WAA3B;AACA,UAAIC,QAAQ,GAAG,KAAK3B,KAAL,CAAWY,IAAX,CAAgBgB,GAA/B;AAEA,UAAIC,KAAK,GAAG,KAAK7B,KAAL,CAAW6B,KAAX,CAAiBC,KAAjB,EAAZ;AAEAD,MAAAA,KAAK,CAACA,KAAK,CAACE,OAAN,CAAcR,KAAd,CAAD,CAAL,CAA4BC,UAA5B,GAAyC,IAAzC;AACA,WAAKb,QAAL,CAAc;AACZqB,QAAAA,IAAI,EAAEH;AADM,OAAd;AAIA,UAAII,aAAa,GAAGJ,KAAK,CAACA,KAAK,CAACE,OAAN,CAAcR,KAAd,CAAD,CAAzB;AACA,UAAIW,eAAe,GAAGD,aAAa,CAACE,EAApC;;AAEA,UAAG1C,OAAO,IAAE,CAAZ,EAAc;AACZ,YAAI2C,GAAG,GAAGxD,QAAQ,CAACyD,QAAT,GAAoBC,GAApB,CAAwB,WAAW1B,IAAI,CAACgB,GAAxC,EAA6CW,IAA7C,GAAoDH,GAA9D;AACAxD,QAAAA,QAAQ,CAACyD,QAAT,GAAoBC,GAApB,CAAwB,WAAW1B,IAAI,CAACgB,GAAxC,EAA6CY,MAA7C,CAAoD;AAAC,WAACN,eAAD,GAAmBD;AAApB,SAApD;AACD;;AAED,WAAK1B,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkByB,QAAAA,YAAY,EAAElB;AAAhC,OAApB;AAED,KAtIkB;;AAAA,SAyInBE,cAzImB,GAyIDF,KAAD,IAAW;AAC1B,UAAIM,KAAK,GAAG,KAAK7B,KAAL,CAAW6B,KAAX,CAAiBC,KAAjB,EAAZ;AACA,UAAIY,QAAQ,GAAG,IAAf,CAF0B,CAG1B;;AACA,WAAK/B,QAAL,CAAc;AACZqB,QAAAA,IAAI,EAAEH;AADM,OAAd;AAIA,WAAKtB,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,WAAR;AAAqBb,QAAAA,SAAS,EAAEoB,KAAK,CAACY;AAAtC,OAApB;AAEA,UAAIvB,IAAI,GAAGhC,QAAQ,CAACU,IAAT,GAAgBoC,WAA3B;AACA,UAAIC,QAAQ,GAAG,KAAK3B,KAAL,CAAWY,IAAX,CAAgBgB,GAA/B;AAEAhD,MAAAA,QAAQ,CAACyD,QAAT,GAAoBC,GAApB,CAAwB,WAAW1B,IAAI,CAACgB,GAAhB,GAAsB,GAAtB,GAA4BL,KAAK,CAACY,EAA1D,EAA8DQ,GAA9D,CAAkE,IAAlE;AAED,KAxJkB;;AAGjB,SAAK3C,KAAL,GAAa;AACX6B,MAAAA,KAAK,EAAE,EADI;AAEXe,MAAAA,aAAa,EAAE,EAFJ;AAGXC,MAAAA,WAAW,EAAE,EAHF;AAIX1B,MAAAA,cAAc,EAAE,EAJL;AAKX2B,MAAAA,SAAS,EAAE,EALA;AAMXC,MAAAA,OAAO,EAAE,CANE;AAOXnC,MAAAA,IAAI,EAAE,IAPK;AAQXC,MAAAA,UAAU,EAAE,KARD;AASXmC,MAAAA,QAAQ,EAAE;AATC,KAAb;AAYA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAED,QAAMC,KAAN,GAAc;AAEZ,UAAMC,IAAI,GAAI,MAAM9D,IAAI,GAAG+D,eAAP,CAAuB9D,QAAvB,EAEnBmB,IAFmB,CAEd,CAAC;AAAEE,MAAAA;AAAF,KAAD,KAAc;AAClB,WAAKD,QAAL,CAAc2C,SAAS,KAAK;AAAE1C,QAAAA,IAAI,EAAEA,IAAR;AAAcC,QAAAA,UAAU,EAAE,IAA1B;AAAgCpB,QAAAA,OAAO,EAAE,CAAzC;AAA4C8D,QAAAA,MAAM,EAAE;AAApD,OAAL,CAAvB,EACC,KAAKN,aADN;AAED,KALmB,CAApB;AAMAxD,IAAAA,OAAO;AACR;;AAeD;AACA+D,EAAAA,iBAAiB,GAAG;AAClB7E,IAAAA,GAAG,CAAC8E,OAAJ,GAAc/C,IAAd,CAAoBgD,MAAD,IAAyB;AAC1C,WAAK/C,QAAL,CAAe2C,SAAD,KAAuB;AACnCzB,QAAAA,KAAK,EAAE6B,MAAM,CAACC;AADqB,OAAvB,CAAd;;AAIA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,KAAK5D,KAAL,CAAW6B,KAAX,CAAiBgC,MAAhC,EAAwCD,CAAC,EAAzC,EAA4C;AAC1C,aAAK5D,KAAL,CAAW6B,KAAX,CAAiB+B,CAAjB,EAAoBpC,UAApB,GAAiC,KAAjC;AACD;;AAED,WAAKjB,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBd,QAAAA,SAAS,EAAE,KAAKF,KAAL,CAAW6B;AAAtC,OAApB;AACD,KAVD;AAYD;;AAEDiC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhE,KAAL,CAAWa,UAAX,GAAwB,GAAxB,GAA8B,KAAKb,KAAL,CAAWgD,QAArD;;AACA,QAAI,KAAKhD,KAAL,CAAWa,UAAX,IAAyB,IAAzB,IAAiC,KAAKb,KAAL,CAAWgD,QAAX,IAAuB,KAA5D,EAAmE;AACjE,WAAKrC,QAAL,CAAc;AAACqC,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACA,WAAKhD,KAAL,CAAWgD,QAAX,GAAsB,IAAtB;AACD;AAGF,GApEgC,CAsEjC;;;AAKA,QAAMC,aAAN,GAAuB;AAErB,QAAIrC,IAAI,GAAGhC,QAAQ,CAACU,IAAT,GAAgBoC,WAAhB,CAA4BE,GAAvC;AACA,QAAIqC,UAAU,GAAG,KAAKjE,KAAL,CAAW6C,WAAX,CAAuBf,KAAvB,EAAjB;AACA,QAAIoC,KAAK,GAAGtF,QAAQ,CAACyD,QAAT,GAAoBC,GAApB,CAAwB,WAAW1B,IAAX,GAAkB,GAA1C,EAA+CuD,UAA/C,EAAZ;AACAD,IAAAA,KAAK,CAACE,IAAN,CAAW,OAAX,EACC1D,IADD,CACM,UAAS2D,QAAT,EAAmB;AAEvBA,MAAAA,QAAQ,CAACC,OAAT,CAAiB,UAASC,aAAT,EAAwB;AACrC;AACA,YAAInC,GAAG,GAAGmC,aAAa,CAACnC,GAAxB,CAFqC,CAGrC;;AACA,YAAIoC,SAAS,GAAGD,aAAa,CAACE,GAAd,EAAhB,CAJqC,CAMrC;;AACA7E,QAAAA,QAAQ,CAAC2C,IAAT,CAAciC,SAAd;AAED,OATH;AAWD,KAbK,CAaJtB,IAbI,CAaC,IAbD,CADN;AAgBAzD,IAAAA,OAAO;AACPI,IAAAA,IAAI,GAAG,CAAP;AAEAiB,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKP,KAAL,CAAWQ,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBf,QAAAA,IAAI,EAAEL;AAAtB,OAApB;AAED,KAHS,EAGP,IAHO,CAAV;AAIAC,IAAAA,IAAI,GAAG,CAAP;AACAF,IAAAA,MAAM,GAAG,KAAKY,KAAL,CAAWN,IAApB;AAED,GA1GgC,CA4GjC;;;AAkDAyE,EAAAA,MAAM,GAAI;AAER;AACA,UAAMC,aAAa,GAAG,KAAKpE,KAAL,CAAWL,SAAX,CAAqB0E,MAArB,CAA4B5C,IAAI,IAAI;AACxD,aAAOA,IAAI,CAAC6C,KAAL,CAAWC,WAAX,GAAyB/C,OAAzB,CAAiC,KAAK/B,KAAL,CAAWmB,cAA5C,KAA+D,CAAtE;AACD,KAFqB,CAAtB;AAIA,WAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAE;AAAC4D,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,UAAU,EAAC,UAA7B;AAAyCC,QAAAA,cAAc,EAAE,QAAzD;AAAmEC,QAAAA,QAAQ,EAAE,MAA7E;AAAqFC,QAAAA,aAAa,EAAE,KAApG;AAA2GC,QAAAA,SAAS,EAAE,MAAtH;AAA8HC,QAAAA,YAAY,EAAE;AAA5I,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAQ,MAAA,iBAAiB,EAAE,KAAKpE,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGA;AAAG,MAAA,KAAK,EAAE;AAACqE,QAAAA,KAAK,EAAE,OAAR;AAAgBP,QAAAA,OAAO,EAAE,MAAzB;AAAkCE,QAAAA,cAAc,EAAC,QAAjD;AAA2DD,QAAAA,UAAU,EAAC,QAAtE;AAAgFO,QAAAA,WAAW,EAAE;AAA7F,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKvF,KAAL,CAAWY,IAAX,0BAAkC,KAAKZ,KAAL,CAAWY,IAAX,CAAgB4E,WAAlD,SAAmE,iCADpE,CAHA,EAOA;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAf;AAAiC,MAAA,OAAO,EAAE,MAAI;AAAE,YAAG,KAAKzF,KAAL,CAAWY,IAAX,IAAmB,IAAtB,EAA2B;AAAE,eAAKuC,KAAL;AAAa,SAA1C,MAAgD;AAAC,eAAK3C,MAAL;AAAc;AAAE,OAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKR,KAAL,CAAWY,IAAX,IAAiB,IAAjB,GAAwB,sBAAxB,GAAiD,SADlD,CAPA,CADA,CAFA,EAiBA,oBAAC,SAAD;AACA,MAAA,KAAK,EAAE+D,aADP;AAEA,MAAA,WAAW,EAAGpD,KAAD,IAAS,KAAKD,WAAL,CAAiBC,KAAjB,CAFtB;AAGA,MAAA,IAAI,EAAE,KAAKvB,KAAL,CAAWY,IAHjB;AAIA,MAAA,EAAE,EAAEf,IAJJ;AAKA,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWN,IALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBA,CAFF;AA8BC;;AAnM8B;;AAyMjC,eAAepB,OAAO,CAACkB,eAAD,CAAP,CAAyBK,IAAzB,CAAf","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport MovieList from './MovieList';\nimport Api from './Api';\nimport './css/App.css';\nimport firebase from 'firebase';\nimport { connect } from 'react-redux';\n\nconst config = {\n  apiKey: \"AIzaSyA1d9vZltW10aoImVaEWBPV5H8pFho2wDg\",\n  authDomain: \"awebb-efe92.firebaseapp.com\",\n  databaseURL: \"https://awebb-efe92.firebaseio.com\",\n  projectId: \"awebb-efe92\",\n  storageBucket: \"awebb-efe92.appspot.com\",\n  messagingSenderId: \"878717963187\"\n}\n\nfirebase.initializeApp(config)\nconst auth = firebase.auth\n\nconst provider = new firebase.auth.FacebookAuthProvider();\n\nvar counter = 0;\nvar favItems = [];\nvar synced = [];\nvar datalist = [];\nvar IDnr = 0;\n\nprovider.setCustomParameters({\n  'display': 'popup'\n});\n\ntype State = {\n  items: Array<Item>,\n  searchbarInput: string,\n};\n\nfunction mapStateToProps(state) {\n\n  return{\n    favo: state.favo,\n    initItems: state.initItems,\n    pressedId: state.pressedId\n  }\n};\n\nclass Main extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: [],\n      favoriteItems: [],\n      syncedItems: [],\n      searchbarInput: '',\n      favorites: [],\n      comment: 0,\n      user: null,\n      isLoggedin: false,\n      isSynced: false,\n    }\n\n    this.renderChoices = this.renderChoices.bind(this);\n  }\n\n  async login() {\n\n    const test =  await auth().signInWithPopup(provider)\n\n    .then(({ user }) => {\n      this.setState(prevState => ({ user: user, isLoggedin: true, counter: 1, favKey: 1 }),\n       this.renderChoices)\n    })\n    counter++;\n  }\n\n  logout = () => {\n    counter = 0;\n    IDnr = 0;\n    firebase.auth().signOut().then(() => {\n      this.setState({ user: null, isLoggedin: false }) \n    })\n    setTimeout(() => {\n      this.props.dispatch({ type: \"LOGOUT\"});\n\n    }, 1000)\n  }\n\n\n  // Last step of initialization (Component lifecycle)\n  componentDidMount() {\n    Api.getList().then((result: ApiResponse) => {\n      this.setState((prevState: State) => ({\n        items: result.results,\n      }))\n\n      for(var i=0 ;i<this.state.items.length ;i++){\n        this.state.items[i].isFavorite = false;\n      }\n\n      this.props.dispatch({ type: \"INIT\", initItems: this.state.items});\n    });\n\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.isLoggedin + \" \" + this.state.isSynced);\n    if (this.state.isLoggedin == true && this.state.isSynced == false) {\n      this.setState({isSynced: true});\n      this.state.isSynced = true;\n    }\n\n\n  }\n\n  // Changes state depending on searchbar input\n  onSearchbarChange = (event: Object) => {\n    this.setState({ searchbarInput: event.target.value });\n  }\n\n  async renderChoices () {\n\n    var user = firebase.auth().currentUser.uid;\n    var childData2 = this.state.syncedItems.slice();\n    var query = firebase.database().ref(\"users/\" + user + \"/\").orderByKey();\n    query.once(\"value\")\n    .then(function(snapshot) {\n\n      snapshot.forEach(function(childSnapshot) {\n          // key will be \"ada\" the first time and \"alan\" the second time\n          var key = childSnapshot.key;\n          // childData will be the actual contents of the child\n          var childData = childSnapshot.val();\n\n          // Add item to it\n          datalist.push(childData);\n\n        });\n\n    }.bind(this));\n\n    counter++;\n    IDnr = 2;\n\n    setTimeout(() => {\n      this.props.dispatch({ type: \"SYNC\", favo: datalist});\n\n    }, 1000)\n    IDnr = 2;\n    synced = this.props.favo;\n\n  }\n\n  // Add favorites\n  addFavorite = (movie) => {\n\n    if(movie.isFavorite){\n      this.removeFavorite(movie);\n      return;\n    }\n\n    var user = firebase.auth().currentUser;\n    var userData = this.state.user.uid;\n\n    var items = this.state.items.slice();\n\n    items[items.indexOf(movie)].isFavorite = true;\n    this.setState({\n      item: items\n    })\n\n    var selectedMovie = items[items.indexOf(movie)];\n    var selectedMovieId = selectedMovie.id;\n\n    if(counter!=0){\n      var key = firebase.database().ref('users/' + user.uid).push().key;\n      firebase.database().ref('users/' + user.uid).update({[selectedMovieId]: selectedMovie});\n    }\n\n    this.props.dispatch({ type: \"ADDFAV\", pressedMovie: movie});\n\n  }\n\n  // Remove favorites\n  removeFavorite = (movie) => {\n    var items = this.state.items.slice();\n    var selected = null;\n    //items[items.indexOf(movie)].isFavorite = false;\n    this.setState({\n      item: items\n    })\n\n    this.props.dispatch({ type: \"REMOVEFAV\", pressedId: movie.id});\n\n    var user = firebase.auth().currentUser;\n    var userData = this.state.user.uid;\n\n    firebase.database().ref('users/' + user.uid + '/' + movie.id).set(null);\n\n  }\n\n\n\n  render () {\n\n    // Filter items depending on searchbar input\n    const filteredItems = this.props.initItems.filter(item => {\n      return item.title.toLowerCase().indexOf(this.state.searchbarInput) >= 0;\n    });    \n\n    return (\n\n      <div className=\"container\">\n\n      <div className='app'>\n      <div style={{display: 'flex', alignItems:'baseline', justifyContent: 'center', flexWrap: 'wrap', flexDirection: 'row', marginTop: '20px', marginBottom: '20px'}}>\n      <Header onSearchbarChange={this.onSearchbarChange}/>\n\n      <p style={{color: 'white',display: 'flex',  justifyContent:'center', alignItems:'center', marginRight: '10px'}}>\n      {this.state.user ? `Signed in as ${this.state.user.displayName}!` : 'Please log in to add favorites.'}\n      </p>\n\n      <button style={{width: '180px'}} onClick={()=>{ if(this.state.user == null){ this.login()} else {this.logout()} }}>\n      {this.state.user==null ? \"Log In with Facebook\" : \"Log Out\"}\n      </button>\n\n      </div>\n      </div>\n\n      <MovieList \n      items={filteredItems} \n      onStarClick={(movie)=>this.addFavorite(movie)}\n      user={this.state.user}\n      ID={IDnr}\n      favmovs={this.props.favo}\n      />\n\n      </div>\n\n      )\n    }\n\n  }\n\n\n\n  export default connect(mapStateToProps)(Main);\n"]},"metadata":{},"sourceType":"module"}